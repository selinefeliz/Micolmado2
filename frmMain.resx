<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ABPkKAAX9EgAF/kkACf0RAAn//AAV//0gS8=
</value>
  </data>
</root>